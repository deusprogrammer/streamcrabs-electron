{"version":3,"sources":["routes/DeathCounter.jsx","routes/RequestQueue.jsx","routes/multi/BadApple.jsx","routes/multi/BirdUp.jsx","routes/multi/ZeldaRaidAlert.jsx","routes/multi/YoshiRaidAlert.jsx","routes/multi/ChargeRaidAlert.jsx","routes/multi/VideoPlayer.jsx","routes/multi/TwitchMultiOverlay.jsx","routes/SoundPlayer.jsx","util/testData.js","routes/RaidAlertTestHarness.jsx","App.js","reportWebVitals.js","index.js"],"names":["DeathCounter","props","connect","a","ws","W3CWebSocket","onopen","interval","clearInterval","send","JSON","stringify","type","from","name","setInterval","onmessage","message","event","parse","data","console","log","onDeath","eventData","count","this","onclose","e","reason","setTimeout","onerror","err","error","close","setState","prevState","deaths","textScale","direction","state","Math","min","max","style","height","width","userSelect","className","fontWeight","fontSize","WebkitTextStroke","WebkitTextFillColor","lineHeight","React","Component","RequestQueue","requestList","mobs","showQueue","mode","position","bottom","left","textAlign","onClick","length","request","requester","maxWidth","margin","padding","backgroundColor","color","slice","reverse","map","index","BadApple","URLSearchParams","window","location","search","timerCallback","videoElement","current","paused","ended","computeFrame","timeOut","ctx1","drawImage","vw","vh","frame","getImageData","i","red","green","blue","ctx2","putImageData","createRef","canvasElement1","canvasElement2","averageColor","r","g","b","document","documentElement","clientHeight","innerHeight","clientWidth","innerWidth","addEventListener","clearTimeout","onComplete","getContext","onresize","play","overflow","display","src","process","controls","crossOrigin","ref","border","BirdUp","birdup","stages","audio","Audio","stage","playing","textRef","imageRef1","imageRef2","imageRef3","imageRef4","imageRef5","imageRef6","birdQueue","alt","right","zIndex","fontFamily","transform","RaidAlert","ground","waterGroup","text","isHurt","isDying","timeout","scaleDirection","scaleDimensions","preload","load","image","spritesheet","frameWidth","frameHeight","create","variable","scale","game","groundWidth","textures","get","getSourceImage","groundHeight","waterWidth","groundHeights","random","physics","add","staticGroup","anims","key","frames","generateFrameNumbers","start","end","frameRate","repeat","bgm","sound","loop","volume","battle","hurt","die","fanfare","once","scene","stop","sys","destroy","linkY","link","sprite","setOrigin","setBounce","setScale","setGravityY","refreshBody","body","setCollideWorldBounds","collider","slime","setGravity","setVelocityX","overlap","setVelocity","useDamping","setDrag","waterX","water","x","y","g1","stroke","strokeThickness","update","tint","useEffect","config","Phaser","AUTO","transparent","parent","default","arcade","gravity","Game","id","yoshiCount","yoshis","badum","speed","ceil","log2","spacing","colors","wall","displayHeight","floor","yoshi","push","spriteCount","sprites","forEach","file","music","leavingSound","startFrame","endFrame","RandomCustomVideo","chromaKey","url","line","Fragment","TwitchMultiOverlay","includes","queue","consumer","currentEvent","reset","showComponent","mediaName","raidTheme","YoshiRaidAlert","ZeldaRaidAlert","ChargeRaidAlert","raidCustomTheme","SoundPlayer","soundQueue","consumerLocked","soundPlaying","top","configs","YOSHI","SKULLMAN","CHAIR","getRaidAlert","axios","headers","localStorage","getItem","found","RaidAlertTestHarness","useState","clicked","setClicked","raider","setRaider","raidSize","setRaidSize","theme","setTheme","setKey","storedConfig","setStoredConfig","urlParams","raidId","raidAlert","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","speechSynthesis","onvoiceschanged","maleVoice","getVoices","find","element","femaleVoice","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.aa7ead74.chunk.js","sourcesContent":["import React from 'react';\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\n\nconst fontSize = 32;\n\nclass DeathCounter extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.ws = null;\n\t\tthis.interval = null;\n\t\tthis.state = {\n\t\t\tdeaths: 0,\n\t\t\ttextScale: 1\n\t\t}\n\t}\n\n\tconnect = async () => {\n        this.ws = new W3CWebSocket('ws://localhost:8081');\n\n        this.ws.onopen = () => {\n\t\t\tif (this.interval) {\n\t\t\t\tclearInterval(this.interval);\n\t\t\t}\n\n\t\t\tthis.ws.send(JSON.stringify({\n\t\t\t\ttype: \"PANEL_INIT\",\n\t\t\t\tfrom: \"PANEL\",\n\t\t\t\tname: \"DEATH_COUNTER\"\n\t\t\t}));\n\n\t\t\tthis.interval = setInterval(() => {\n                this.ws.send(JSON.stringify({\n                    type: \"PANEL_PING\",\n                    from: \"PANEL\",\n\t\t\t\t\tname: \"DEATH_COUNTER\"\n                }));\n            }, 20 * 1000);\n        };\n\n        this.ws.onmessage = async (message) => {\n            let event = JSON.parse(message.data);\n\n\t\t\tconsole.log(\"EVENT: \" + JSON.stringify(event, null, 5));\n            \n\t\t\tif (event.type === \"DEATH_COUNT\") {\n\t\t\t\tthis.onDeath(event.eventData.count);\n\t\t\t}\n        };\n\n        this.ws.onclose = async (e) => {\n            console.log('Socket is closed. Reconnect will be attempted in 5 second.', e.reason);\n            setTimeout(() => {\n                this.connect();\n            }, 5000);\n        };\n\n        this.ws.onerror = async (err) => {\n            console.error('Socket encountered error: ', err.message, 'Closing socket');\n            this.ws.close();\n        };\n    }\n\n\tcomponentDidMount() {\n\t\tthis.connect();\n\t}\n\n\tonDeath = (count = null) => {\n\t\tthis.setState((prevState) => {\n\t\t\treturn {\n\t\t\t\tdeaths: count !== -1 ? count : prevState.deaths + 1,\n\t\t\t\ttextScale: 1\n\t\t\t}\n\t\t});\n\n\t\tlet direction = 1;\n\n\t\tlet interval = setInterval(() => {\n\t\t\t//If scaling up\n\t\t\tif (this.state.textScale <= 2 && direction > 0) {\n\t\t\t\tthis.setState((prevState) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttextScale: Math.min(prevState.textScale + 0.1, 2)\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// If scaling down\n\t\t\tif (this.state.textScale >= 1 && direction < 0) {\n\t\t\t\tthis.setState((prevState) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttextScale: Math.max(prevState.textScale - 0.1, 1)\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// If done animating up\n\t\t\tif (this.state.textScale >= 2 && direction > 0) {\n\t\t\t\tdirection = -1;\n\t\t\t}\n\n\t\t\t// If done animating down\n\t\t\tif (this.state.textScale <= 1 && direction < 0) {\n\t\t\t\tclearInterval(interval);\n\t\t\t}\n\t\t}, 10);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div style={{height: \"100vh\", width: \"100vw\", userSelect: \"none\"}} className=\"App\">\n\t\t\t\t<span style={{fontWeight: \"bolder\", fontSize: `${this.state.textScale * fontSize}pt`, WebkitTextStroke: \"2px black\", WebkitTextFillColor: \"white\", lineHeight: \"100vh\", height: \"100vh\"}}>Deaths: {this.state.deaths}</span>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default DeathCounter;\n","import React from 'react';\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\n\nclass RequestQueue extends React.Component {\n    constructor() {\n        super();\n        this.interval = null;\n        this.state = {\n            mode: \"NEXT_UP\",\n            requestList: []\n        }\n    }\n\n\tconnect = async () => {\n        const ws = new W3CWebSocket('ws://localhost:8081');\n\n        ws.onopen = () => {\n            ws.send(JSON.stringify({\n                type: \"PANEL_INIT\",\n                from: \"PANEL\",\n                name: \"REQUESTS\"\n            }));\n\n            if (this.interval) {\n                clearInterval(this.interval);\n            }\n\n            this.interval = setInterval(() => {\n                ws.send(JSON.stringify({\n                    type: \"PANEL_PING\",\n                    from: \"PANEL\",\n                    name: \"REQUESTS\"\n                }));\n            }, 20 * 1000);\n        };\n\n        ws.onmessage = async (message) => {\n            let event = JSON.parse(message.data);\n            \n\t\t\tif (event.type === \"REQUEST\") {\n\t\t\t\tthis.setState({requestList: event.eventData.requestList});\n\t\t\t}\n        };\n\n        ws.onclose = async (e) => {\n            console.log('Socket is closed. Reconnect will be attempted in 5 second.', e.reason);\n            this.setState({ mobs: [] });\n            setTimeout(async () => {\n                this.connect();\n            }, 5000);\n        };\n\n        ws.onerror = async (err) => {\n            console.error('Socket encountered error: ', err.message, 'Closing socket');\n            ws.close();\n        };\n    }\n\n\tcomponentDidMount() {\n        this.connect();\n\n        setInterval(() => {\n            this.showQueue();\n        }, 1000 * 60);\n\t}\n\n    showQueue = () => {\n        this.setState({mode: \"QUEUE\"});\n        setTimeout(() => {\n            this.setState({mode: \"NEXT_UP\"})\n        }, 1000 * 10);\n    }\n\n\trender() {\n\t\treturn (\n\t\t\t<div style={{height: \"100vh\", width: \"100vw\", userSelect: \"none\", position: \"relative\"}} className=\"App\">\n                    <div style={{width: \"100vw\", position: \"absolute\", bottom: \"0px\", left: \"0px\", textAlign: \"center\", fontSize: \"20pt\", WebkitTextStroke: \"1px black\", WebkitTextFillColor: \"white\"}} onClick={this.showQueue}>\n                        {this.state.requestList.length > 0 ? <marquee>Next up: {this.state.requestList[this.state.requestList.length - 1].request} from {this.state.requestList[this.state.requestList.length - 1].requester}</marquee>\n                        :\n                        <marquee>No requests so far.  Make a request by donating!</marquee>}\n                    </div>\n                    <div style={{width: \"100vw\", position: \"absolute\", bottom: \"0px\", left: \"0px\", textAlign: \"center\"}}>\n                        <div className={this.state.mode === \"QUEUE\" ? \"open\" : \"closed\"} style={{maxWidth: \"50%\", margin: \"auto\", padding: \"0px 5px\", backgroundColor: \"gray\", color: \"white\"}}>\n                            <strong>Coming up:</strong>\n                            {this.state.requestList.slice().reverse().slice(0, 3).map((request, index) => {\n                                return (\n                                    <div key={`entry-${index}`} style={{color: index === 0 ? \"yellow\" : \"white\"}}>\n                                        {index + 1}: {request.request} from {request.requester}\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    </div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default RequestQueue;\n","import React from 'react';\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\n\nlet urlParams = new URLSearchParams(window.location.search);\n\nconst RED_THRESH   = 177;\nconst GREEN_THRESH = 177;\nconst BLUE_THRESH  = 177;\n\nexport default class BadApple extends React.Component {\n    constructor(props) {\n        super(props);\n        this.videoElement = React.createRef();\n        this.canvasElement1 = React.createRef();\n        this.canvasElement2 = React.createRef();\n        this.ctx1 = null;\n        this.ctx2 = null;\n\n        this.timeOut = null;\n\n        this.state = {\n            averageColor: {r: 0, g: 0, b: 0},\n            vh: Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0),\n            vw: Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0)\n        }\n    }\n\n    // connect = async () => {\n    //     const ws = new W3CWebSocket('wss://deusprogrammer.com/api/ws/twitch');\n\n    //     ws.onopen = () => {\n    //         ws.send(JSON.stringify({\n    //             type: \"REGISTER_PANEL\",\n    //             from: \"PANEL\",\n    //             channelId: urlParams.get(\"channelId\")\n    //         }));\n\n    //         setInterval(() => {\n    //             ws.send(JSON.stringify({\n    //                 type: \"PING_SERVER\",\n    //                 from: \"PANEL\",\n    //                 channelId: urlParams.get(\"channelId\")\n    //             }));\n    //         }, 20 * 1000);\n    //     };\n\n    //     ws.onmessage = async (message) => {\n    //         let event = JSON.parse(message.data);\n            \n\t// \t\tif (event.type === \"BADAPPLE\") {\n\t// \t\t\tthis.videoElement.current.play();\n\t// \t\t}\n    //     };\n\n    //     ws.onclose = async (e) => {\n    //         console.log('Socket is closed. Reconnect will be attempted in 5 second.', e.reason);\n    //         this.setState({ mobs: [] });\n    //         setTimeout(async () => {\n    //             this.connect();\n    //         }, 5000);\n    //     };\n\n    //     ws.onerror = async (err) => {\n    //         console.error('Socket encountered error: ', err.message, 'Closing socket');\n    //         ws.close();\n    //     };\n    // }\n\n    componentDidMount() {\n        // // If a channel id is supplied, connect the websocket for updates via bot commands\n\t\t// if (urlParams.get(\"channelId\")) {\n\t\t// \tthis.connect();\n\t\t// }\n\n        this.videoElement.current.addEventListener(\"ended\", () => {\n            if (this.timeOut) {\n                clearTimeout(this.timeOut);\n            }\n            this.props.onComplete(\"badapple\");\n        })\n\n        this.ctx1 = this.canvasElement1.current.getContext('2d');\n        this.ctx2 = this.canvasElement2.current.getContext('2d');\n    \n        this.videoElement.current.addEventListener('play', () => {\n            this.timerCallback();\n        }, false);\n\n        window.onresize = () => {\n            this.setState({\n                vh: Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0),\n                vw: Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0)\n            })\n        };\n\n        this.videoElement.current.play();\n    }\n\n    timerCallback = () => {\n        if ((this.videoElement && this.videoElement.current) && (this.videoElement.current.paused || this.videoElement.current.ended)) {\n            return;\n        }\n        this.computeFrame();\n        this.timeOut = setTimeout(() => {\n            this.timerCallback();\n        }, 0);\n    };\n\n    computeFrame = () => {\n        if (!this.videoElement.current) {\n            return;\n        }\n        this.ctx1.drawImage(this.videoElement.current, 0, 0, this.state.vw, this.state.vh);\n        const frame = this.ctx1.getImageData(0, 0, this.state.vw, this.state.vh);\n        const length = frame.data.length;\n\n        for (let i = 0; i < length; i += 4) {\n            const red = frame.data[i + 0];\n            const green = frame.data[i + 1];\n            const blue = frame.data[i + 2];\n\n            if (green <= GREEN_THRESH && red <= RED_THRESH && blue <= BLUE_THRESH) {\n                frame.data[i + 3] = 0;\n            }\n        }\n        this.ctx2.putImageData(frame, 0, 0);\n    };\n    \n    render() {\n        return (\n            <div \n                style={{overflow: 'hidden'}}>\n                <video\n                    style={{display: \"none\"}}\n                    src={`${process.env.PUBLIC_URL}/videos/badapple.mp4`} \n                    controls={false}\n                    crossOrigin=\"anonymous\"\n                    ref={this.videoElement} />\n                <canvas height={this.state.vh} width={this.state.vw} style={{display: \"none\"}} ref={this.canvasElement1} />\n                <canvas height={this.state.vh} width={this.state.vw} style={{border: \"1px solid black\"}} ref={this.canvasElement2} />\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\n\nlet urlParams = new URLSearchParams(window.location.search);\n\nclass BirdUp extends React.Component {\n\t\n    constructor() {\n        super();\n\n        this.playing = false;\n\n        this.textRef = React.createRef();\n        this.imageRef1 = React.createRef();\n        this.imageRef2 = React.createRef();\n        this.imageRef3 = React.createRef();\n        this.imageRef4 = React.createRef();\n        this.imageRef5 = React.createRef();\n        this.imageRef6 = React.createRef();\n\n        this.stages = [this.textRef, this.imageRef1, this.imageRef2, this.imageRef3, this.imageRef4, this.imageRef5, this.imageRef6];\n        this.birdQueue = [];\n\n        this.state = {\n        }\n    }\n\n\t// connect = async () => {\n    //     const ws = new W3CWebSocket('wss://deusprogrammer.com/api/ws/twitch');\n\n    //     ws.onopen = () => {\n    //         ws.send(JSON.stringify({\n    //             type: \"REGISTER_PANEL\",\n    //             from: \"PANEL\",\n    //             channelId: urlParams.get(\"channelId\")\n    //         }));\n\n    //         setInterval(() => {\n    //             ws.send(JSON.stringify({\n    //                 type: \"PING_SERVER\",\n    //                 from: \"PANEL\",\n    //                 channelId: urlParams.get(\"channelId\")\n    //             }));\n    //         }, 20 * 1000);\n    //     };\n\n    //     ws.onmessage = async (message) => {\n    //         let event = JSON.parse(message.data);\n            \n\t// \t\tif (event.type === \"BIRDUP\") {\n    //             this.birdQueue.push({});\n\t// \t\t\t//this.birdup();\n\t// \t\t}\n    //     };\n\n    //     ws.onclose = async (e) => {\n    //         console.log('Socket is closed. Reconnect will be attempted in 5 second.', e.reason);\n    //         this.setState({ mobs: [] });\n    //         setTimeout(async () => {\n    //             this.connect();\n    //         }, 5000);\n    //     };\n\n    //     ws.onerror = async (err) => {\n    //         console.error('Socket encountered error: ', err.message, 'Closing socket');\n    //         ws.close();\n    //     };\n    // }\n\n    // consumer = async () => {\n    //     if (this.birdQueue.length <= 0 || this.playing || !this.stages[0].current) {\n    //         return;\n    //     }\n\n    //     this.birdQueue = this.birdQueue.slice(1);\n    //     this.playing = true;\n\n    //     await this.birdup();\n    // }\n\n\tcomponentDidMount() {\n\t\t// If a channel id is supplied, connect the websocket for updates via bot commands\n\t\t// if (urlParams.get(\"channelId\")) {\n\t\t// \tthis.connect();\n\t\t// }\n\n        // setInterval(this.consumer, 1000);\n\n        this.birdup();\n\t}\n\n\tbirdup = async () => {\n        this.stages[0].current.style.display = \"block\";\n        let audio = new Audio(`${process.env.PUBLIC_URL}/sounds/birdup.mp3`);\n        await audio.play();\n\n        let stage = 1;\n        let interval = setInterval(() => {\n            if (stage >= this.stages.length) {\n                clearInterval(interval);\n                setTimeout(() => {\n                    for (let s of this.stages) {\n                        s.current.style.display = \"none\";\n                    }\n\n                    // Delay start of next queue element by at least 5 seconds\n                    setTimeout(() => {\n                        this.playing = false;\n                        this.props.onComplete(\"birdup\");\n                    }, 5000);\n                }, 2000);\n                return;\n            }\n\n            this.stages[stage++].current.style.display = \"block\";\n        }, 300);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div style={{height: \"100vh\", width: \"100vw\", userSelect: \"none\", position: \"relative\"}} className=\"App\">\n                <img  alt=\"birdup\" style={{position: \"absolute\", fontSize: \"20px\", right: \"0px\", bottom: \"0px\", height: \"20%\", zIndex: \"101\", display: \"none\"}} ref={this.imageRef1} src={`${process.env.PUBLIC_URL}/images/birdup.png`} />\n                <img  alt=\"birdup\" style={{position: \"absolute\", fontSize: \"20px\", right: \"0px\", bottom: \"0px\", height: \"40%\", zIndex: \"102\", display: \"none\"}} ref={this.imageRef2} src={`${process.env.PUBLIC_URL}/images//birdup.png`} />\n                <img  alt=\"birdup\" style={{position: \"absolute\", fontSize: \"20px\", right: \"0px\", bottom: \"0px\", height: \"60%\", zIndex: \"103\", display: \"none\"}} ref={this.imageRef3} src={`${process.env.PUBLIC_URL}/images//birdup.png`} />\n                <img  alt=\"birdup\" style={{position: \"absolute\", fontSize: \"20px\", right: \"0px\", bottom: \"0px\", height: \"80%\", zIndex: \"104\", display: \"none\"}} ref={this.imageRef4} src={`${process.env.PUBLIC_URL}/images//birdup.png`} />\n                <img  alt=\"birdup\" style={{position: \"absolute\", fontSize: \"20px\", right: \"0px\", bottom: \"0px\", height: \"100%\", zIndex: \"105\", display: \"none\"}} ref={this.imageRef5} src={`${process.env.PUBLIC_URL}/images//birdup.png`} />\n                <img  alt=\"birdup\" style={{position: \"absolute\", fontSize: \"20px\", right: \"0px\", bottom: \"0px\", height: \"120%\", zIndex: \"106\", display: \"none\"}} ref={this.imageRef6} src={`${process.env.PUBLIC_URL}/images//birdup.png`} />\n                <div  style={{position: \"absolute\", fontFamily: \"Cooper Black\", WebkitTextStroke: \"5px black\", WebkitTextFillColor: \"#CE01E2\", bottom: \"0px\", left: \"50%\", transform: \"translate(-50%, -50%)\", fontSize: \"70pt\",  zIndex: \"200\", display: \"none\"}} ref={this.textRef}>BIRD UP!</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default BirdUp;","import React, {useState, useEffect} from 'react';\nimport Phaser from 'phaser';\n\nlet RaidAlert = (props) => {\n    let ground, waterGroup;\n\n    let isHurt = false;\n    let isDying = false;\n    let timeout = null;\n    let text;\n    let scaleDirection = 1;\n\n    let scaleDimensions = {w: 1440, h: 820};\n\n    function preload() {\n        const slimeImage = process.env.PUBLIC_URL + '/images/slime-sprite.png';\n        const linkImage = process.env.PUBLIC_URL + '/images/link.png';\n\n        const groundImage = process.env.PUBLIC_URL + '/images/ground.png';\n        const waterImage = process.env.PUBLIC_URL + '/images/water.png';\n\n        const bgmSound = process.env.PUBLIC_URL + '/sounds/bgm.mp3';\n        const battleSound = process.env.PUBLIC_URL + '/sounds/battle.wav';\n        const hurtSound = process.env.PUBLIC_URL + '/sounds/hurt.wav';\n        const dieSound = process.env.PUBLIC_URL + '/sounds/die.wav';\n        const fanfareSound = process.env.PUBLIC_URL + '/sounds/fanfare.wav';;\n\n        this.load.image('ground', groundImage);\n        this.load.image('water', waterImage);\n\n        this.load.spritesheet('slime', \n            slimeImage,\n            { frameWidth: 80, frameHeight: 80 }\n        );\n        this.load.spritesheet('link', \n            linkImage,\n            { frameWidth: 80, frameHeight: 160 }\n        );\n\n        this.load.audio('bgm', [bgmSound]);\n        this.load.audio('battle', [battleSound]);\n        this.load.audio('hurt', [hurtSound]);\n        this.load.audio('die', [dieSound]);\n        this.load.audio('fanfare', [fanfareSound]);\n    }\n\n    function create() {\n        const variable = props.variable;\n        const scale = this.game.scale.width/scaleDimensions.w;\n        const groundWidth = this.textures.get('ground').getSourceImage().width * scale;\n        const groundHeight = this.textures.get('ground').getSourceImage().height * scale;\n        const waterWidth = this.textures.get('water').getSourceImage().width * scale;\n        const groundHeights = [(Math.random() * 100 + 200) * scale, (Math.random() * 100 + 200) * scale];\n\n        ground = this.physics.add.staticGroup();\n        waterGroup = this.physics.add.staticGroup();\n        this.anims.create({\n            key: 'wobble',\n            frames: this.anims.generateFrameNumbers('slime', { start: 0, end: 2 }),\n            frameRate: 10,\n            repeat: -1\n        });\n\n        this.anims.create({\n            key: 'idle',\n            frames: this.anims.generateFrameNumbers('link', { start: 0, end: 0 }),\n            frameRate: 10,\n            repeat: -1\n        });\n\n        this.anims.create({\n            key: 'hurt',\n            frames: this.anims.generateFrameNumbers('link', { start: 1, end: 1 }),\n            frameRate: 10,\n            repeat: -1\n        });\n\n        let bgm = this.sound.add('bgm', {loop: true, volume: 0.25});\n        let battle = this.sound.add('battle', {loop: false});\n        let hurt = this.sound.add('hurt', {loop: false, volume: 3});\n        let die = this.sound.add('die', {loop: false});\n        let fanfare = this.sound.add('fanfare', {loop: false, volume: 1});\n        die.once('complete', () => {\n            this.scene.stop();\n            this.sys.game.destroy(true);\n            clearTimeout(timeout);\n            props.onComplete();\n        });\n        fanfare.once('complete', () => {\n            this.scene.stop();\n            this.sys.game.destroy(true);\n            clearTimeout(timeout);\n            props.onComplete();\n        })\n\n        battle.play();\n        bgm.play();\n\n        // Draw Link\n        const linkY = this.game.scale.height - (groundHeight - groundHeights[1]);\n        let link = this.physics.add.sprite(groundWidth + 200, linkY, 'link');\n        link.setOrigin(0, 1);\n        link.setBounce(0.5);\n        link.setScale(scale);\n        link.setGravityY(300);\n        link.refreshBody();\n        link.body.setCollideWorldBounds(true);\n        link.anims.play('idle', true);\n        this.physics.add.collider(link, ground);\n\n        // Draw slimes\n        for (let i = 0; i < variable; i++) {\n            let slime = this.physics.add.sprite(-i * .5, (Math.random() * (this.game.scale.height - 100)) - (groundHeight - groundHeights[0]), 'slime');\n            slime.setScale(scale);\n            slime.setBounce(Math.min(1, Math.random() + 0.5));\n            slime.body.setGravity(400);\n            slime.anims.play('wobble', true);\n            slime.setVelocityX(Math.random() * 300);\n            this.physics.add.collider(slime, ground);\n            this.physics.add.overlap(link, slime, () => {\n                if (!isHurt) {\n                    isHurt = true;\n                    hurt.play();\n                }\n                link.play('hurt');\n                link.setVelocity(500, -50);\n                link.body.useDamping = true;\n                link.setDrag(0.99);\n            }, null, this);\n            this.physics.add.overlap(link, waterGroup, () => {\n                if (!isDying) {\n                    isDying = true;\n                    die.play();\n                }\n                bgm.stop();\n                link.play('hurt');\n                link.setVelocity(0, 50);\n            }, null, this);\n        }\n\n        // Draw water\n        let waterX = 0;\n        while (waterX < this.game.scale.width) {\n            let water = waterGroup.create(0, 0, \"water\");\n            water.setScale(scale);\n            water.setOrigin(0, 1);\n            water.x = waterX;\n            water.y = this.game.scale.height + 100;\n            water.refreshBody();\n            waterX += (waterWidth);\n        }\n\n        // Draw ground\n        for (let i = 0; i < 2; i++) {\n            let x = i * ((groundWidth) + 200);\n            let height = groundHeights[i];\n            let g1 = ground.create(x, this.game.scale.height + height, 'ground');\n            g1.setOrigin(0, 1);\n            g1.setScale(scale);\n            g1.refreshBody();\n        }\n\n        text = this.add.text(0.5 * this.game.scale.width, 0.5 * this.game.scale.height, props.message, { fontSize: \"30pt\", stroke: \"#000\", strokeThickness: 5 });\n        text.setOrigin(0.5, 0.5);\n\n        // Set timeout\n        timeout = setTimeout(() => {\n            bgm.stop();\n            fanfare.play();\n        }, 10000);\n    }\n\n    function update() {\n        text.setScale(text.scale + (scaleDirection * 0.01));\n        text.tint = Math.random() * 0xffffff;\n        if (text.scale > 2 || text.scale < 0.5) {\n            scaleDirection *= -1;\n        }\n    }\n\n    const start = () => {\n        const config = {\n            type: Phaser.AUTO,\n            width: \"100vw\",\n            height: \"100vh\",\n            transparent: true,\n            parent: \"phaser\",\n            scene: {\n                preload,\n                create,\n                update\n            }, \n            physics: {\n                default: 'arcade',\n                arcade: {\n                    gravity: { y: 200 }\n                }\n            },\n        };\n\n        new Phaser.Game(config);\n    }\n\n    useEffect(() => {\n        start();\n    }, []);\n\n    return (\n        <div>\n            <div id=\"phaser\" />\n        </div>\n    );\n}\n\nexport default RaidAlert;\n","import React, {useEffect} from 'react';\nimport Phaser from 'phaser';\n\nlet RaidAlert = (props) => {\n    let yoshiCount = 0;\n    let yoshis = [];\n    let timeout = false;\n    let text;\n    let scaleDirection = 1;\n\n    let scaleDimensions = {w: 1440, h: 820};\n\n    function preload() {\n        const yoshiImage = process.env.PUBLIC_URL + '/images/yoshi/yoshi-walk.png';\n        const yoshiImageBlue = process.env.PUBLIC_URL + '/images/yoshi/yoshi-walk-blue.png';\n        const yoshiImagePurple = process.env.PUBLIC_URL + '/images/yoshi/yoshi-walk-purple.png';\n        const yoshiImagePink = process.env.PUBLIC_URL + '/images/yoshi/yoshi-walk-pink.png';\n        const yoshiImageBlack = process.env.PUBLIC_URL + '/images/yoshi/yoshi-walk-black.png';\n        const yoshiImageYellow = process.env.PUBLIC_URL + '/images/yoshi/yoshi-walk-yellow.png';\n\n        const fanfare = process.env.PUBLIC_URL + '/sounds/yoshi/yoshi-fanfare.mp3';\n        const badum = process.env.PUBLIC_URL + '/sounds/yoshi/yoshi-tongue.mp3';\n\n        const groundImage = process.env.PUBLIC_URL + '/images/ground.png';\n        const waterImage = process.env.PUBLIC_URL + '/images/water.png';\n\n        this.load.image('ground', groundImage);\n        this.load.image('water', waterImage);\n\n        this.load.spritesheet('yoshiGreen',\n            yoshiImage,\n            { frameWidth: 128, frameHeight: 128 }\n        );\n\n        this.load.spritesheet('yoshiBlue',\n            yoshiImageBlue,\n            { frameWidth: 128, frameHeight: 128 }\n        );\n\n        this.load.spritesheet('yoshiPurple',\n            yoshiImagePurple,\n            { frameWidth: 128, frameHeight: 128 }\n        );\n\n        this.load.spritesheet('yoshiPink',\n            yoshiImagePink,\n            { frameWidth: 128, frameHeight: 128 }\n        );\n\n        this.load.spritesheet('yoshiBlack',\n            yoshiImageBlack,\n            { frameWidth: 128, frameHeight: 128 }\n        );\n\n        this.load.spritesheet('yoshiYellow',\n            yoshiImageYellow,\n            { frameWidth: 128, frameHeight: 128 }\n        );\n\n        this.load.audio('fanfare', [fanfare]);\n        this.load.audio('badum', [badum]);\n    }\n\n    function create() {\n        const scale = this.game.scale.width/scaleDimensions.w;\n        const variable = props.variable;\n\n        this.anims.create({\n            key: 'walkGreen',\n            frames: this.anims.generateFrameNumbers('yoshiGreen', { start: 0, end: 9 }),\n            frameRate: 15,\n            repeat: -1\n        });\n\n        this.anims.create({\n            key: 'walkPurple',\n            frames: this.anims.generateFrameNumbers('yoshiPurple', { start: 0, end: 9 }),\n            frameRate: 15,\n            repeat: -1\n        });\n\n        this.anims.create({\n            key: 'walkPink',\n            frames: this.anims.generateFrameNumbers('yoshiPink', { start: 0, end: 9 }),\n            frameRate: 15,\n            repeat: -1\n        });\n\n        this.anims.create({\n            key: 'walkBlue',\n            frames: this.anims.generateFrameNumbers('yoshiBlue', { start: 0, end: 9 }),\n            frameRate: 15,\n            repeat: -1\n        });\n\n        this.anims.create({\n            key: 'walkBlack',\n            frames: this.anims.generateFrameNumbers('yoshiBlack', { start: 0, end: 9 }),\n            frameRate: 15,\n            repeat: -1\n        });\n\n        this.anims.create({\n            key: 'walkYellow',\n            frames: this.anims.generateFrameNumbers('yoshiYellow', { start: 0, end: 9 }),\n            frameRate: 15,\n            repeat: -1\n        });\n\n        let fanfare = this.sound.add('fanfare', {loop: true, volume: 1});\n        let badum = this.sound.add('badum', {loop: false, volume: 1});\n\n        let speed = Math.ceil((Math.log2(variable) + 1) * 100);\n        let spacing = Math.ceil(5000/variable);\n\n        let colors = [\"Green\", \"Purple\", \"Blue\", \"Pink\", \"Yellow\", \"Black\"];\n\n        let wall = this.physics.add.sprite(this.game.scale.width + 256, 0, 'ground');\n        wall.setOrigin(0, 0);\n        wall.displayHeight = this.game.scale.height;\n\n        yoshiCount = variable;\n\n        fanfare.play();\n\n        // Draw yoshis\n        for (let i = 0; i < variable; i++) {\n            let color = colors[Math.floor(Math.random() * colors.length)];\n            let yoshi = this.physics.add.sprite(-i * spacing, Math.random() * this.game.scale.height, `yoshi${color}`);\n            yoshi.setScale(scale);\n            yoshi.body.setGravity(0);\n            yoshi.anims.play(`walk${color}`, true);\n            yoshi.setVelocityX(speed);\n            yoshis.push(yoshi);\n\n            this.physics.add.overlap(yoshi, wall, () => {\n                badum.play();\n                yoshi.destroy();\n                yoshiCount--;\n            }, null, this);\n        }\n\n        setTimeout(() => {\n            timeout = true;\n        }, 15000);\n\n        text = this.add.text(0.5 * this.game.scale.width, 0.5 * this.game.scale.height, props.message, { fontSize: \"30pt\", stroke: \"#000\", strokeThickness: 5 });\n        text.setOrigin(0.5, 0.5);\n    }\n\n    function update() {\n        if (yoshiCount <= 0 && timeout) {\n            this.scene.stop();\n            this.sys.game.destroy(true);\n            \n            if (props.onComplete) {\n                props.onComplete();\n            }\n        }\n\n        text.setScale(text.scale + (scaleDirection * 0.01));\n        text.tint = Math.random() * 0xffffff;\n        if (text.scale > 2 || text.scale < 0.5) {\n            scaleDirection *= -1;\n        }\n    }\n\n    const start = () => {\n        const config = {\n            type: Phaser.AUTO,\n            width: \"100vw\",\n            height: \"100vh\",\n            transparent: true,\n            parent: \"phaser\",\n            scene: {\n                preload,\n                create,\n                update\n            }, \n            physics: {\n                default: 'arcade',\n                arcade: {\n                    gravity: { y: 0 }\n                }\n            },\n        };\n\n        new Phaser.Game(config);\n    }\n\n    useEffect(() => {\n        start();\n    }, []);\n\n    return (\n        <div>\n            <div id=\"phaser\" />\n        </div>\n    );\n}\n\nexport default RaidAlert;","import React, {useEffect} from 'react';\nimport Phaser from 'phaser';\n\nlet RaidAlert = (props) => {\n    let spriteCount = 0;\n    let timeout = false;\n    let text;\n    let scaleDirection = 1;\n\n    let scaleDimensions = {w: 1440, h: 820};\n\n    function preload() {\n        const groundImage = process.env.PUBLIC_URL + '/images/ground.png';\n        this.load.image('ground', groundImage);\n\n        props.config.sprites.forEach((sprite, index) => {\n            this.load.spritesheet(`sprite${index}`,\n                sprite.file,\n                { frameWidth: sprite.frameWidth, frameHeight: sprite.frameHeight }\n            );\n        });\n\n        this.load.audio('music', [props.config.music.file]);\n        this.load.audio('leaving', [props.config.leavingSound.file]);\n    }\n\n    function create() {\n        const scale = this.game.scale.width/scaleDimensions.w;\n        const variable = props.variable;\n\n        props.config.sprites.forEach((sprite, index) => {\n            this.anims.create({\n                key: `animation${index}`,\n                frames: this.anims.generateFrameNumbers(`sprite${index}`, { start: sprite.startFrame, end: sprite.endFrame }),\n                frameRate: sprite.frameRate,\n                repeat: -1\n            });\n        });\n\n        let music = this.sound.add('music', {loop: true, volume: props.config.music.volume});\n        let leavingSound = this.sound.add('leaving', {loop: false, volume: props.config.leavingSound.volume});\n\n        let speed = (Math.ceil(Math.log2(variable) + 1) * 100);\n        let spacing = Math.ceil(5000/variable);\n\n        let wall = this.physics.add.sprite(this.game.scale.width + 256, 0, 'ground');\n        wall.setOrigin(0, 0);\n        wall.displayHeight = this.game.scale.height;\n\n        spriteCount = variable;\n\n        music.play();\n\n        // Draw yoshis\n        for (let i = 0; i < variable; i++) {\n            let r = Math.floor(Math.random() * props.config.sprites.length);\n            let sprite = this.physics.add.sprite(-i * spacing, Math.random() * this.game.scale.height, `sprite${r}`);\n            sprite.setScale(scale);\n            sprite.body.setGravity(0);\n            sprite.anims.play(`animation${r}`, true);\n            sprite.setVelocityX(speed);\n\n            this.physics.add.overlap(sprite, wall, () => {\n                leavingSound.play();\n                sprite.destroy();\n                spriteCount--;\n            }, null, this);\n        }\n\n        setTimeout(() => {\n            timeout = true;\n        }, 15000);\n\n        text = this.add.text(0.5 * this.game.scale.width, 0.5 * this.game.scale.height, props.message, { fontSize: \"30pt\", stroke: \"#000\", strokeThickness: 5 });\n        text.setOrigin(0.5, 0.5);\n    }\n\n    function update() {\n        if (spriteCount <= 0 && timeout) {\n            this.scene.stop();\n            this.sys.game.destroy(true);\n            \n            if (props.onComplete) {\n                props.onComplete();\n            }\n        }\n\n        text.setScale(text.scale + (scaleDirection * 0.01));\n        text.tint = Math.random() * 0xffffff;\n        if (text.scale > 2 || text.scale < 0.5) {\n            scaleDirection *= -1;\n        }\n    }\n\n    const start = () => {\n        const config = {\n            type: Phaser.AUTO,\n            width: \"100vw\",\n            height: \"100vh\",\n            transparent: true,\n            parent: \"phaser\",\n            scene: {\n                preload,\n                create,\n                update\n            }, \n            physics: {\n                default: 'arcade',\n                arcade: {\n                    gravity: { y: 0 }\n                }\n            },\n        };\n\n        new Phaser.Game(config);\n    }\n\n    useEffect(() => {\n        start();\n    }, []);\n\n    return (\n        <div>\n            <div id=\"phaser\" />\n        </div>\n    );\n}\n\nexport default RaidAlert;","import React from 'react';\n\nconst RANDOM_VIDEO_COUNT = 7;\n\nexport default class RandomCustomVideo extends React.Component {\n    constructor(props) {\n        super(props);\n        this.videoElement = React.createRef();\n        this.canvasElement1 = React.createRef();\n        this.canvasElement2 = React.createRef();\n        this.ctx1 = null;\n        this.ctx2 = null;\n\n        this.timeOut = null;\n\n        this.state = {\n            averageColor: {r: 0, g: 0, b: 0},\n            vh: Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0),\n            vw: Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0)\n        }\n    }\n\n    componentDidMount() {\n        this.videoElement.current.addEventListener(\"ended\", () => {\n            if (this.timeOut) {\n                clearTimeout(this.timeOut);\n            }\n            this.props.onComplete(\"randomcustomvideo\");\n        })\n\n        this.ctx1 = this.canvasElement1.current.getContext('2d');\n        this.ctx2 = this.canvasElement2.current.getContext('2d');\n    \n        this.videoElement.current.addEventListener('play', () => {\n            this.timerCallback();\n        }, false);\n\n        window.onresize = () => {\n            this.setState({\n                vh: Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0),\n                vw: Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0)\n            })\n        };\n\n        this.videoElement.current.volume = this.props.volume;\n        this.videoElement.current.play();\n    }\n\n    timerCallback = () => {\n        if ((this.videoElement && this.videoElement.current) && (this.videoElement.current.paused || this.videoElement.current.ended)) {\n            return;\n        }\n        this.computeFrame();\n        this.timeOut = setTimeout(() => {\n            this.timerCallback();\n        }, 0);\n    };\n\n    computeFrame = () => {\n        if (!this.videoElement.current) {\n            return;\n        }\n        this.ctx1.drawImage(this.videoElement.current, 0, 0, this.state.vw, this.state.vh);\n        const frame = this.ctx1.getImageData(0, 0, this.state.vw, this.state.vh);\n        const length = frame.data.length;\n\n        for (let i = 0; i < length; i += 4) {\n            const red = frame.data[i + 0];\n            const green = frame.data[i + 1];\n            const blue = frame.data[i + 2];\n\n            if (this.props.chromaKey === \"green\") {\n                if (green > red + blue) {\n                    frame.data[i + 3] = 0;\n                }\n            } else if (this.props.chromaKey === \"red\") {\n                if (red > green + blue) {\n                    frame.data[i + 3] = 0;\n                }\n            } else if (this.props.chromaKey === \"blue\") {\n                if (blue > red + green) {\n                    frame.data[i + 3] = 0;\n                }\n            }\n        }\n        this.ctx2.putImageData(frame, 0, 0);\n    };\n    \n    render() {\n        let n = Math.ceil((Math.random() * RANDOM_VIDEO_COUNT));\n\n        return (\n            <div \n                style={{overflow: 'hidden'}}>\n                <video\n                    style={{display: \"none\"}}\n                    src={this.props.url} \n                    controls={false}\n                    crossOrigin=\"anonymous\"\n                    ref={this.videoElement} />\n                <canvas height={this.state.vh} width={this.state.vw} style={{display: \"none\"}} ref={this.canvasElement1} />\n                <canvas height={this.state.vh} width={this.state.vw} style={{border: \"1px solid black\"}} ref={this.canvasElement2} />\n                <span style={{\n                            position: \"absolute\",\n                            bottom: \"0px\",\n                            left: \"50%\",\n                            transform: \"translateX(-50%)\",\n                            fontSize: \"20pt\",\n                            WebkitTextStroke: \"1px black\",\n                            WebkitTextFillColor: \"white\",\n                }}>{this.props.message.map((line) => {\n                    return (\n                        <React.Fragment>\n                            {line}<br/>\n                        </React.Fragment>\n                    );\n                })}\n                </span>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport BadApple from './BadApple';\nimport BirdUp from './BirdUp';\nimport ZeldaRaidAlert from './ZeldaRaidAlert';\nimport YoshiRaidAlert from './YoshiRaidAlert';\nimport ChargeRaidAlert from './ChargeRaidAlert';\nimport VideoPlayer from './VideoPlayer';\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\n\nexport default class TwitchMultiOverlay extends React.Component {\n    constructor(props) {\n        super(props);\n        this.queue = [];\n        this.interval = null;\n        this.state = {\n            currentEvent: null\n        }\n    }\n\n    connect = async () => {\n        const ws = new W3CWebSocket('ws://localhost:8081');\n\n        ws.onopen = () => {\n            ws.send(JSON.stringify({\n                type: \"PANEL_INIT\",\n                from: \"PANEL\",\n                name: \"MULTI\"\n            }));\n\n            if (this.interval) {\n                clearInterval(this.interval);\n            }\n\n            this.interval = setInterval(() => {\n                ws.send(JSON.stringify({\n                    type: \"PANEL_PING\",\n                    from: \"PANEL\",\n                    name: \"MULTI\"\n                }));\n            }, 20 * 1000);\n        };\n\n        ws.onmessage = async (message) => {\n            let event = JSON.parse(message.data);\n\n            if (![\"BIRDUP\", \"VIDEO\", \"BADAPPLE\", \"DYNAMIC\"].includes(event.type)) {\n                console.log(\"FILTERED OUT\");\n                return;\n            }\n\n            console.log(\"Received: \" + JSON.stringify(event, null, 5));\n\n            this.queue.push(event);\n        };\n\n        ws.onclose = async (e) => {\n            console.log('Socket is closed. Reconnect will be attempted in 5 second.', e.reason);\n            this.setState({ mobs: [] });\n            setTimeout(async () => {\n                this.connect();\n            }, 5000);\n        };\n\n        ws.onerror = async (err) => {\n            console.error('Socket encountered error: ', err.message, 'Closing socket');\n            ws.close();\n        };\n    }\n\n    consumer = async () => {\n        if (this.queue.length <= 0 || this.state.currentEvent) {\n            return;\n        }\n\n        let currentEvent = this.queue[0];\n        this.queue = this.queue.slice(1);\n        this.playing = true;\n\n        this.setState({currentEvent});\n    }\n\n    componentDidMount() {\n\t\tthis.connect();\n\n        setInterval(this.consumer, 1000);\n    }\n\n    reset = () => {\n        this.setState({currentEvent: null});\n    }\n\n    render() {\n        let showComponent = null;\n\n        console.log(JSON.stringify(this.state.currentEvent, null, 5));\n\n        if (!this.state.currentEvent) {\n            return (<div></div>)\n        }\n\n        switch(this.state.currentEvent.type) {\n            case \"BADAPPLE\":\n                showComponent = <BadApple \n                                    onComplete={this.reset}\n                                    requester={this.state.currentEvent.eventData.requester} />;\n                break;\n            case \"VIDEO\":\n                showComponent = <VideoPlayer \n                                    onComplete={this.reset} \n                                    message={this.state.currentEvent.eventData.message}\n                                    requester={this.state.currentEvent.eventData.requester}\n                                    url={this.state.currentEvent.eventData.url} \n                                    mediaName={this.state.currentEvent.eventData.mediaName}\n                                    volume={this.state.currentEvent.eventData.volume}\n                                    chromaKey={this.state.currentEvent.eventData.chromaKey} />;\n                break;\n            case \"BIRDUP\":\n                showComponent = <BirdUp \n                                    onComplete={this.reset}\n                                    message={this.state.currentEvent.eventData.message}\n                                    requester={this.state.currentEvent.eventData.requester} />;\n                break;\n            case \"DYNAMIC\":\n                if (this.state.currentEvent.eventData.raidTheme === \"YOSHI\") {\n                    showComponent = <YoshiRaidAlert \n                                        onComplete={this.reset}\n                                        message={this.state.currentEvent.eventData.message}\n                                        variable={this.state.currentEvent.eventData.variable} />;\n                } else if (this.state.currentEvent.eventData.raidTheme === \"ZELDA2\") {\n                    showComponent = <ZeldaRaidAlert \n                                        onComplete={this.reset}\n                                        message={this.state.currentEvent.eventData.message}\n                                        variable={this.state.currentEvent.eventData.variable} />;\n                } else if (this.state.currentEvent.eventData.raidTheme === \"STORED\") {\n                    showComponent = <ChargeRaidAlert \n                                        onComplete={this.reset}\n                                        message={this.state.currentEvent.eventData.message}\n                                        variable={this.state.currentEvent.eventData.variable}\n                                        config={this.state.currentEvent.eventData.raidCustomTheme} />;\n                }\n                break;\n            case \"DEFAULT\":\n                this.reset();\n        }\n\n        return (\n            <div>\n                <div className=\"multContainer\">\n                    {showComponent}\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\n\nclass SoundPlayer extends React.Component {\n    constructor() {\n        super();\n        this.consumerLocked = false;\n        this.interval = null;\n        this.soundQueue = [];\n\n        this.state = {\n            soundPlaying: false,\n            requester: null,\n            mediaName: null,\n            message: null\n        }\n    }\n\n\tconnect = async () => {\n        const ws = new W3CWebSocket('ws://localhost:8081');\n\n        ws.onopen = () => {\n            ws.send(JSON.stringify({\n                type: \"PANEL_INIT\",\n                from: \"PANEL\",\n                name: \"SOUND_PLAYER\"\n            }));\n\n            if (this.interval) {\n                clearInterval(this.interval);\n            }\n\n            this.interval = setInterval(() => {\n                ws.send(JSON.stringify({\n                    type: \"PANEL_PING\",\n                    from: \"PANEL\",\n                    name: \"SOUND_PLAYER\"\n                }));\n            }, 20 * 1000);\n        };\n\n        ws.onmessage = async (message) => {\n            let event = JSON.parse(message.data);\n            \n\t\t\tif (event.type === \"AUDIO\") {\n                this.soundQueue.push({requester: event.eventData.requester, mediaName: event.eventData.mediaName, url: event.eventData.url, volume: event.eventData.volume, message: event.eventData.message})\n\t\t\t}\n        };\n\n        ws.onclose = async (e) => {\n            console.log('Socket is closed. Reconnect will be attempted in 5 second.', e.reason);\n            this.setState({ mobs: [] });\n            setTimeout(async () => {\n                this.connect();\n            }, 5000);\n        };\n\n        ws.onerror = async (err) => {\n            console.error('Socket encountered error: ', err.message, 'Closing socket');\n            ws.close();\n        };\n    }\n\n    consumer = async () => {\n        if (this.soundQueue.length <= 0 || this.consumerLocked) {\n            return;\n        }\n\n        let {requester, mediaName, url, volume, message} = this.soundQueue[0];\n        this.consumerLocked = true;\n        this.soundQueue = this.soundQueue.slice(1);\n        this.setState({requester, mediaName, message});\n\n        var audio = new Audio(url);\n        this.setState({soundPlaying: true});\n        audio.addEventListener(\"ended\", () => {\n            this.setState({soundPlaying: false});\n            setTimeout(() => {\n                this.consumerLocked = false;\n            }, 5000);\n        });\n        audio.volume = volume;\n        await audio.play();\n    }\n\n\tcomponentDidMount() {\n\t\tthis.connect();\n        setInterval(this.consumer, 0);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div style={{height: \"100vh\", width: \"100vw\", userSelect: \"none\"}} className=\"App\">\n                {this.state.soundPlaying ?\n                    <div> \n                        <img \n                            style={{\n                                position: \"absolute\",\n                                width: \"100px\",\n                                height: \"100px\",\n                                top: \"50%\",\n                                left: \"50%\",\n                                transform: \"translate(-50%, -50%)\"\n                            }} \n                            src={`${process.env.PUBLIC_URL}/images/speaker.png`} />\n                        <span style={{\n                            position: \"absolute\",\n                            top: \"50%\",\n                            left: \"50%\",\n                            transform: \"translate(-50%, -50%)\",\n                            fontSize: \"20pt\",\n                            WebkitTextStroke: \"1px black\",\n                            WebkitTextFillColor: \"white\"\n                        }}>\n                            {this.state.message.map((line) => {\n                                return (\n                                    <React.Fragment>\n                                        {line}<br/>\n                                    </React.Fragment>\n                                );\n                            })}\n                        </span>\n                    </div>\n                : null  }\n            </div>\n\t\t);\n\t}\n}\n\nexport default SoundPlayer;\n","export const configs = {\n    YOSHI: {\n        message: 'Incoming raid from ${raider} with a party of ${raidSize}!',\n        sprites: [\n            {\n                file: process.env.PUBLIC_URL + '/images/yoshi/yoshi-walk.png',\n                startFrame: 0,\n                endFrame: 9,\n                frameWidth: 128,\n                frameHeight: 128,\n                frameRate: 15\n            },\n            {\n                file: process.env.PUBLIC_URL + '/images/yoshi/yoshi-walk-black.png',\n                startFrame: 0,\n                endFrame: 9,\n                frameWidth: 128,\n                frameHeight: 128,\n                frameRate: 15\n            },\n            {\n                file: process.env.PUBLIC_URL + '/images/yoshi/yoshi-walk-blue.png',\n                startFrame: 0,\n                endFrame: 9,\n                frameWidth: 128,\n                frameHeight: 128,\n                frameRate: 15\n            },\n            {\n                file: process.env.PUBLIC_URL + '/images/yoshi/yoshi-walk-pink.png',\n                startFrame: 0,\n                endFrame: 9,\n                frameWidth: 128,\n                frameHeight: 128,\n                frameRate: 15\n            },\n            {\n                file: process.env.PUBLIC_URL + '/images/yoshi/yoshi-walk-purple.png',\n                startFrame: 0,\n                endFrame: 9,\n                frameWidth: 128,\n                frameHeight: 128,\n                frameRate: 15\n            },\n            {\n                file: process.env.PUBLIC_URL + '/images/yoshi/yoshi-walk-yellow.png',\n                startFrame: 0,\n                endFrame: 9,\n                frameWidth: 128,\n                frameHeight: 128,\n                frameRate: 15\n            }\n        ],\n        music: {\n            file: process.env.PUBLIC_URL + '/sounds/yoshi/yoshi-fanfare.mp3',\n            volume: 1\n        },\n        leavingSound: {\n            file: process.env.PUBLIC_URL + '/sounds/yoshi/yoshi-tongue.mp3',\n            volume: 1\n        }\n    },\n    SKULLMAN: {\n        message: 'HOLY SHIT! ${raider} raided with a party of ${raidSize}!',\n        sprites: [\n            {\n                file: process.env.PUBLIC_URL + '/images/skullman/skullman-walk.png',\n                startFrame: 0,\n                endFrame: 9,\n                frameWidth: 99,\n                frameHeight: 128,\n                frameRate: 15\n            }\n        ],\n        music: {\n            file: process.env.PUBLIC_URL + '/sounds/skullman/battle.mp3',\n            volume: 1\n        },\n        leavingSound: {\n            file: process.env.PUBLIC_URL + '/sounds/skullman/ash-groovy.mp3',\n            volume: 3\n        }\n    },\n    CHAIR: {\n        message: 'CHEESE IT UP! ${raider} raided with a party of ${raidSize}!',\n        sprites: [\n            {\n                file: process.env.PUBLIC_URL + '/images/chair/cheesesteak-walk.png',\n                startFrame: 0,\n                endFrame: 5,\n                frameWidth: 128,\n                frameHeight: 128,\n                frameRate: 15\n            },\n            {\n                file: process.env.PUBLIC_URL + '/images/chair/yuu.png',\n                startFrame: 24,\n                endFrame: 29,\n                frameWidth: 128,\n                frameHeight: 128,\n                frameRate: 15\n            },\n            {\n                file: process.env.PUBLIC_URL + '/images/chair/tanako.png',\n                startFrame: 30,\n                endFrame: 41,\n                frameWidth: 128,\n                frameHeight: 128,\n                frameRate: 15\n            }\n        ],\n        music: {\n            file: process.env.PUBLIC_URL + '/sounds/chair/music.mp3',\n            volume: 1\n        },\n        leavingSound: {\n            file: process.env.PUBLIC_URL + '/sounds/chair/cheeseitup.wav',\n            volume: 1\n        }\n    }\n}","import React, {useEffect, useState} from 'react';\nimport YoshiRaidAlert from './multi/YoshiRaidAlert';\nimport ZeldaRaidAlert from './multi/ZeldaRaidAlert';\nimport ChargeRaidAlert from './multi/ChargeRaidAlert';\n\nimport {configs} from '../util/testData';\nimport axios from 'axios';\n\nconst getRaidAlert = async (id) => {\n    let found = await axios.get(`https://deusprogrammer.com/api/twitch/raid-configs/${id}`, {\n        headers: {\n            \"X-Access-Token\": localStorage.getItem(\"accessToken\")\n        }\n    });\n\n    return found.data;\n}\n\nconst RaidAlertTestHarness = () => {\n    const [clicked, setClicked] = useState(false);\n    const [raider, setRaider] = useState(\"daddyfartbux\");\n    const [raidSize, setRaidSize] = useState(100);\n    const [theme, setTheme] = useState(\"CUSTOM\");\n    const [key, setKey] = useState(\"SKULLMAN\");\n    const [storedConfig, setStoredConfig] = useState({});\n\n    useEffect(async () => {\n        // Get url params\n        const urlParams = new URLSearchParams(window.location.search);\n        const raidTheme = urlParams.get('theme');\n        const raidId = urlParams.get('key');\n        setRaider(urlParams.get('raider') ? urlParams.get('raider') : \"daddyfartbux\");\n        setRaidSize(urlParams.get('raidSize') ? urlParams.get('raidSize') : 10);\n        setTheme(urlParams.get('theme') ? urlParams.get('theme') : \"YOSHI\");\n        setKey(urlParams.get('key') ? urlParams.get('key') : \"SKULLMAN\");\n\n        if (raidTheme === \"STORED\") {\n            let config = await getRaidAlert(raidId);\n            setStoredConfig(config);\n        }\n    }, []);\n\n    let raidAlert = null;\n\n    switch(theme) {\n        case \"YOSHI\":\n            raidAlert = <YoshiRaidAlert \n                            raider={raider} \n                            raidSize={raidSize} \n                            onComplete={() => {setClicked(false)}} />;\n            break;\n        case \"ZELDA\":\n            raidAlert = <ZeldaRaidAlert \n                            raider={raider} \n                            raidSize={raidSize} \n                            onComplete={() => {setClicked(false)}} />;\n            break;\n        case \"CUSTOM\":\n            raidAlert = <ChargeRaidAlert \n                            raider={raider} \n                            raidSize={raidSize} \n                            config={configs[key]}\n                            onComplete={() => {setClicked(false)}} />;\n        case \"STORED\":\n            raidAlert = <ChargeRaidAlert \n                            raider={raider} \n                            raidSize={raidSize} \n                            config={storedConfig}\n                            onComplete={() => {setClicked(false)}} />;\n            break;\n    }\n\n    return (\n        <div>\n            {clicked ? \n                raidAlert\n             : \n                <div>\n                    <p>Testing with size <b>{raidSize}</b> and raider <b>{raider}</b></p>\n                    <button onClick={() => {\n                        setClicked(true);\n                    }}>Click to Test</button>\n                    <h3>Debug</h3>\n                    <pre>\n                        {JSON.stringify(storedConfig, null, 5)}\n                    </pre>\n                </div>\n            }\n        </div>\n    );\n}\n\nexport default RaidAlertTestHarness","import React from 'react';\nimport './App.css';\n\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport DeathCounter from './routes/DeathCounter';\nimport RequestQueue from './routes/RequestQueue';\nimport TwitchMultiOverlay from './routes/multi/TwitchMultiOverlay';\nimport SoundPlayer from './routes/SoundPlayer';\nimport RaidAlertTestHarness from './routes/RaidAlertTestHarness';\n\nclass App extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<Router>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path={`${process.env.PUBLIC_URL}/tools/raid-test`} component={RaidAlertTestHarness} exact />\n\t\t\t\t\t<Route path={`${process.env.PUBLIC_URL}/overlays/multi`} component={TwitchMultiOverlay} exact />\n\t\t\t\t\t<Route path={`${process.env.PUBLIC_URL}/overlays/death-counter`} component={DeathCounter} exact />\n\t\t\t\t\t<Route path={`${process.env.PUBLIC_URL}/overlays/sound-player`} component={SoundPlayer} exact />\n\t\t\t\t\t<Route path={`${process.env.PUBLIC_URL}/overlays/requests`} component={RequestQueue} exact />\n\t\t\t\t</Switch>\n\t\t\t</Router>\n\t\t);\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nwindow.speechSynthesis.onvoiceschanged = () => {\n  window.maleVoice = window.speechSynthesis.getVoices().find((element) => {\n      return element.name === \"Microsoft David - English (United States)\";\n  });\n\n  window.femaleVoice = window.speechSynthesis.getVoices().find((element) => {\n      return element.name === \"Microsoft Zira - English (United States)\";\n  });\n\n  console.log(\"MAN:   \" + window.maleVoice);\n  console.log(\"WOMAN: \" + window.femaleVoice);\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}